/*******************************
            Theme
*******************************/

@type : 'extra';

@element : 'select';

@import (multiple) '../../theme.config';

/**
 * React Select
 * ============
 * Created by Jed Watson and Joss Mackison for KeystoneJS, http://www.keystonejs.com/
 * https://twitter.com/jedwatson https://twitter.com/jossmackison https://twitter.com/keystonejs
 * MIT License: https://github.com/JedWatson/react-select
*/

//
// Control
// ------------------------------

// Mixins

// focused styles
.Select-focus-state(@color) {
  border-color: @color;
  background: @select-input-bg-focus;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px fade(@color, 10%);
}
// "classic" focused styles: maintain for legacy
.Select-focus-state-classic() {
  border-color: @select-input-border-focus
    lighten(@select-input-border-focus, 5%)
    lighten(@select-input-border-focus, 5%);
  background: @select-input-bg-focus;
  box-shadow: @select-input-box-shadow-focus;
}

// base

.Select {
  position: relative;

  // disable some browser-specific behaviours that break the input
  input::-webkit-contacts-auto-fill-button,
  input::-webkit-credentials-auto-fill-button {
    display: none !important;
  }

  input::-ms-clear {
    display: none !important;
  }

  input::-ms-reveal {
    display: none !important;
  }

  // preferred box model
  &,
  & div,
  & input,
  & span {
    .box-sizing(border-box);
  }

  // handle disabled state
  &.is-disabled {
    .Select-arrow-zone {
      cursor: default;
      opacity: 0.35;
      pointer-events: none;
    }

    > .Select-control {
      background-color: @select-input-bg-disabled;

      &:hover {
        box-shadow: none;
      }
    }
  }

  &.is-open > .Select-control {
    .border-bottom-radius(0);
    border-color: darken(@select-input-border-color, 10%)
      @select-input-border-color lighten(@select-input-border-color, 5%);

    background: @select-input-bg;

    // flip the arrow so its pointing up when the menu is open
    .Select-arrow {
      top: -2px;
      border-width: 0 @select-arrow-width @select-arrow-width;
      border-color: transparent transparent @select-arrow-color;
    }
  }

  &.is-searchable {
    &.is-open > .Select-control {
      cursor: text;
    }

    &.is-focused:not(.is-open) > .Select-control {
      cursor: text;
    }
  }

  &.is-focused > .Select-control {
    background: @select-input-bg-focus;
  }

  &.is-focused:not(.is-open) > .Select-control {
    .Select-focus-state(@select-input-border-focus);
  }

  &.has-value.is-clearable.Select--single > .Select-control .Select-value {
    padding-right: (@select-clear-width + @select-arrow-width * 5);
  }

  &.has-value.Select--single > .Select-control .Select-value,
  &.has-value.is-pseudo-focused.Select--single > .Select-control .Select-value {
    .Select-value-label {
      color: @select-text-color;
    }

    a.Select-value-label {
      cursor: pointer;
      text-decoration: none;

      &:hover,
      &:focus {
        color: @select-link-hover-color;
        outline: none;
        text-decoration: underline;
      }

      &:focus {
        background: @select-input-bg-focus;
      }
    }
  }

  // fake-hide the input when the control is pseudo-focused
  &.has-value.is-pseudo-focused .Select-input {
    opacity: 0;
  }

  &.is-open .Select-arrow,
  .Select-arrow-zone:hover > .Select-arrow {
    border-top-color: @select-arrow-color-hover;
  }

  &.Select--rtl {
    direction: rtl;
    text-align: right;
  }
}

// base

.Select-control {
  position: relative;
  display: table;
  overflow: hidden;
  width: 100%;
  height: @select-input-height;
  border: @select-input-border-width solid @select-input-border-color;
  border-color: lighten(@select-input-border-color, 5%)
    @select-input-border-color darken(@select-input-border-color, 10%);
  background-color: @select-input-bg;
  border-collapse: separate;
  border-radius: @select-input-border-radius;
  border-spacing: 0;
  color: @select-text-color;
  cursor: default;
  outline: none;

  &:hover {
    box-shadow: @select-input-hover-box-shadow;
  }

  .Select-input:focus {
    background: @select-input-bg-focus;
    outline: none;
  }
}

// placeholder
.Select-placeholder,
.Select--single > .Select-control .Select-value {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;

  // crop text
  max-width: 100%;
  padding-right: @select-padding-horizontal;
  padding-left: @select-padding-horizontal;
  color: @select-input-placeholder;
  line-height: @select-input-internal-height;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// the <input> element users type in

.Select-input {
  // inherits `display: inline-block` from "react-input-autosize"
  height: @select-input-internal-height;
  padding-right: @select-padding-horizontal;
  padding-left: @select-padding-horizontal;
  vertical-align: middle;

  > input {
    display: inline-block;
    width: 100%;
    padding: ((@select-input-internal-height - 14) / 2 - 2) 0
      ((@select-input-internal-height - 14) / 2 + 2); /* For IE 8 compatibility */
    // height: @select-input-internal-height;
    margin: 0;
    border: 0 none;

    -webkit-appearance: none;
    background: none transparent;
    box-shadow: none;
    cursor: default;
    font-family: inherit;
    font-size: inherit;
    // padding: 0;
    line-height: 17px; /* For IE 8 compatibility */
    outline: none;

    .is-focused & {
      cursor: text;
    }
  }
}

// fake-hide the input when the control is pseudo-focused
.has-value.is-pseudo-focused .Select-input {
  opacity: 0;
}

// fake input
.Select-control:not(.is-searchable) > .Select-input {
  outline: none;
}

// loading indicator
.Select-loading-zone {
  position: relative;
  display: table-cell;
  width: @select-loading-size;
  cursor: pointer;
  text-align: center;
  vertical-align: middle;
}

.Select-loading {
  .Select-spinner(
    @select-loading-size,
    @select-loading-color-bg,
    @select-loading-color
  );

  vertical-align: middle;
}

// the little cross that clears the field

.Select-clear-zone {
  .animation(Select-animation-fadeIn 200ms);
  position: relative;
  display: table-cell;
  width: @select-clear-width;

  color: @select-clear-color;
  cursor: pointer;
  text-align: center;
  vertical-align: middle;

  &:hover {
    color: @select-clear-hover-color;
  }
}

.Select-clear {
  display: inline-block;
  font-size: @select-clear-size;
  line-height: 1;
}

.Select--multi .Select-clear-zone {
  width: @select-clear-width;
}

// arrow indicator

.Select-arrow-zone {
  position: relative;
  display: table-cell;
  width: (@select-arrow-width * 5);
  padding-right: @select-arrow-width;
  cursor: pointer;
  text-align: center;
  vertical-align: middle;

  .Select--rtl & {
    padding-right: 0;
    padding-left: @select-arrow-width;
  }
}

.Select-arrow {
  position: relative;
  display: inline-block;
  width: 0;
  height: 0;
  border-width: @select-arrow-width @select-arrow-width
    (@select-arrow-width / 2);
  border-style: solid;
  border-color: @select-arrow-color transparent transparent;
}

.Select-control > *:last-child {
  padding-right: @select-right-padding;
}

.Select--multi .Select-multi-value-wrapper {
  display: inline-block;
}

.Select .Select-aria-only {
  position: absolute;
  display: inline-block;
  overflow: hidden;
  width: 1px;
  height: 1px;
  margin: -1px;
  clip: rect(0, 0, 0, 0);
  float: left;
}

// Animation
// ------------------------------

// fade in

@-webkit-keyframes Select-animation-fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes Select-animation-fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

//
// Select Menu
// ------------------------------

// wrapper around the menu

.Select-menu-outer {
  // Unfortunately, having both border-radius and allows scrolling using overflow defined on the same
  // element forces the browser to repaint on scroll.  However, if these definitions are split into an
  // outer and an inner element, the browser is able to optimize the scrolling behavior and does not
  // have to repaint on scroll.
  .border-bottom-radius(@select-input-border-radius);
  position: absolute;
  z-index: @select-menu-zindex;
  top: 100%;
  left: 0;
  width: 100%;
  max-height: @select-menu-max-height;
  box-sizing: border-box;
  margin-top: -1px;
  border: 1px solid @select-input-border-color;
  border-top-color: mix(@select-input-bg, @select-input-border-color, 50%);

  background-color: @select-input-bg;
  box-shadow: @select-menu-box-shadow;
  -webkit-overflow-scrolling: touch;
}

// wrapper

.Select-menu {
  max-height: (@select-menu-max-height - 2px);
  overflow-y: auto;
}

// options

.Select-option {
  display: block;
  box-sizing: border-box;
  padding: @select-padding-vertical @select-padding-horizontal;
  background-color: @select-option-bg;
  color: @select-option-color;
  cursor: pointer;

  &:last-child {
    .border-bottom-radius(@select-input-border-radius);
  }

  &.is-selected {
    background-color: @select-option-selected-bg-fb; /* Fallback color for IE 8 */
    background-color: @select-option-selected-bg;
    color: @select-option-selected-color;
  }

  &.is-focused {
    background-color: @select-option-focused-bg-fb; /* Fallback color for IE 8 */
    background-color: @select-option-focused-bg;
    color: @select-option-focused-color;
  }

  &.is-disabled {
    color: @select-option-disabled-color;
    cursor: default;
  }
}

// no results

.Select-noresults {
  display: block;
  box-sizing: border-box;
  padding: @select-padding-vertical @select-padding-horizontal;
  color: @select-noresults-color;
  cursor: default;
}

//
// Mixins
// ------------------------------

// Utilities

.size(@width; @height) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size; @size);
}
.border-top-radius(@radius) {
  border-top-left-radius: @radius;
  border-top-right-radius: @radius;
}
.border-right-radius(@radius) {
  border-bottom-right-radius: @radius;
  border-top-right-radius: @radius;
}
.border-bottom-radius(@radius) {
  border-bottom-left-radius: @radius;
  border-bottom-right-radius: @radius;
}
.border-left-radius(@radius) {
  border-bottom-left-radius: @radius;
  border-top-left-radius: @radius;
}

// Vendor Prefixes

.animation(@animation) {
  -webkit-animation: @animation;
  -o-animation: @animation;
  animation: @animation;
}
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
  -moz-box-sizing: @boxmodel;
  box-sizing: @boxmodel;
}
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
  -ms-transform: rotate(@degrees); // IE9 only
  -o-transform: rotate(@degrees);
  transform: rotate(@degrees);
}
.transform(@transform) {
  -webkit-transform: @transform;
  -moz-transform: @transform;
  -ms-transform: @transform;
  transform: @transform;
}

//
// Multi-Select
// ------------------------------

// Base

.Select--multi {
  // add margin to the input element
  .Select-input {
    padding: 0;
    // border: 1px solid transparent;
    margin-left: @select-padding-horizontal;
    vertical-align: middle;
  }

  &.Select--rtl .Select-input {
    margin-right: @select-padding-horizontal;
    margin-left: 0;
  }

  // reduce margin once there is value
  &.has-value .Select-input {
    margin-left: @select-item-gutter;
  }

  // Items
  .Select-value {
    display: inline-block;
    margin-top: @select-item-gutter;
    margin-left: @select-item-gutter;
    border: 1px solid @select-item-border-color-fb; /* Fallback color for IE 8 */
    border: 1px solid @select-item-border-color;
    background-color: @select-item-bg-fb; /* Fallback color for IE 8 */
    background-color: @select-item-bg;
    border-radius: @select-item-border-radius;
    color: @select-item-color;
    font-size: @select-item-font-size;
    line-height: 1.4;
    vertical-align: top;
  }

  // common
  .Select-value-icon,
  .Select-value-label {
    display: inline-block;
    vertical-align: middle;
  }

  // label
  .Select-value-label {
    .border-right-radius(@select-item-border-radius);
    padding: @select-item-padding-vertical @select-item-padding-horizontal;

    cursor: default;
  }

  a.Select-value-label {
    color: @select-item-color;
    cursor: pointer;
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }

  // icon
  .Select-value-icon {

    // move the baseline up by 1px
    padding: (@select-item-padding-vertical - 1) @select-item-padding-horizontal
      (@select-item-padding-vertical + 1);

    border-right: 1px solid @select-item-border-color-fb; /* Fallback color for IE 8 */
    border-right: 1px solid @select-item-border-color;
    cursor: pointer;
    .border-left-radius(@select-item-border-radius);

    &:hover,
    &:focus {
      background-color: @select-item-hover-bg-fb; /* Fallback color for IE 8 */
      background-color: @select-item-hover-bg;
      color: @select-item-hover-color;
    }

    &:active {
      background-color: @select-item-border-color-fb; /* Fallback color for IE 8 */
      background-color: @select-item-border-color;
    }
  }

  &.Select--rtl {
    .Select-value {
      margin-right: @select-item-gutter;
      margin-left: 0;
    }

    .Select-value-icon {
      border-right: none;
      border-left: 1px solid @select-item-border-color-fb; /* Fallback color for IE 8 */
      border-left: 1px solid @select-item-border-color;
    }
  }
}

.Select--multi.is-disabled {
  .Select-value {
    border: 1px solid @select-item-disabled-border-color;
    background-color: @select-item-disabled-bg;
    color: @select-item-disabled-color;
  }
  // icon
  .Select-value-icon {
    border-right: 1px solid @select-item-disabled-border-color;
    cursor: not-allowed;

    &:hover,
    &:focus,
    &:active {
      background-color: @select-item-disabled-bg;
    }
  }
}

//
// Spinner
// ------------------------------

.Select-spinner(@size, @orbit, @satellite) {
  .animation(Select-animation-spin 400ms infinite linear);
  .square(@size);
  position: relative;
  display: inline-block;

  box-sizing: border-box;
  border: floor((@size / 8)) solid @orbit;
  border-right-color: @satellite;
  border-radius: 50%;
}

@keyframes Select-animation-spin {
  to {
    transform: rotate(1turn);
  }
}

@-webkit-keyframes Select-animation-spin {
  to {
    -webkit-transform: rotate(1turn);
  }
}

// PastanagaUI overrides of the original
.Select {
  min-width: 215px;
  font-weight: 300;

  .Select-control {
    border-bottom: 2px solid @silverTwo;
  }

  &.is-open > .Select-control {
    border-bottom-style: dotted;
  }
}

.Select-option {
  display: flex;
  height: 45px;
  align-items: center;

  span {
    color: #636363;
  }

  svg {
    display: none;
  }

  &.is-selected {
    span {
      color: @cerulean;
    }

    svg {
      display: block;
      color: @cerulean;
    }
  }

  &.is-focused {
    span {
      color: #4a4a4a;
    }

    svg {
      display: block;
      color: @silverTwo;
    }
  }
}

.Select-menu-outer {
  position: static; // We want it pushes the next items down.
  border: 0;
  border-bottom: 2px solid @silverTwo;
}

.loadUIOverrides();
